.CollapsibleContentBoard {
    padding-top: 4px;
    margin-bottom: 20px;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas:
        "headerArea"
        "childrenArea";
    border: 1px solid var(--borderColor_aroundWhiteOrLightestGrey);
    border-radius: 5px;
    background-color: white;
    height: 60px;
}

.headerContainer {
    grid-area: headerArea;
    display: grid;
    grid-template-columns: auto auto auto 1fr auto;
    grid-template-areas: "buttonArea    titleArea   caretArea   .   measureValueArea";
    height: 50px;
    overflow: visible;
}

.headerContainer .collapseButtonContainer {
    grid-area: buttonArea;
    align-self: center;
    margin-left: 20px;
    margin-right: 20px;
}

.headerContainer .title {
    grid-area: titleArea;
    align-self: center;
    font-size: x-large;
    font-weight: bold;
    cursor: pointer;
    user-select: none;
}

.headerContainer .caret {
    grid-area: caretArea;
    align-self: center;
    font-size: x-large;
    font-weight: bold;
    padding-left: 5px;
    padding-top: 7px;
    cursor: pointer;
}

.headerContainer .measureValueContainer {
    grid-area: measureValueArea;
    display: grid;
    grid-template-columns: auto auto auto;
    grid-template-areas: "measureValueArea  measureValueChangeArea  measurePercentChangeArea";
    margin-right: 20px;
}

.headerContainer .measureValueContainer .measureValue {
    grid-area: measureValueArea;
    align-self: center;
    font-size: medium;
    font-weight: 500;
}

.headerContainer .measureValueContainer .measureValueChange {
    grid-area: measureValueChangeArea;
    align-self: center;
    font-size: medium;
    font-weight: 500;
    margin-left: 20px;
    color: var(--textColor_negative);
}

.measureChangedUpwards .headerContainer .measureValueContainer .measureValueChange .measureValueChange {
    color: var(--textColor_positive);
}

.headerContainer .measureValueContainer .measurePercentChange {
    grid-area: measurePercentChangeArea;
    align-self: center;
    font-size: medium;
    font-weight: 500;
    margin-left: 20px;
    color: var(--textColor_negative);
}

.measureChangedUpwards .headerContainer .measureValueContainer .measurePercentChange {
    color: var(--textColor_positive);
}

.headerContainer .measureSelectorContainer {
    visibility: hidden;
    position: absolute;
    top: 54px;
    left: 40px;
    background-color: #fffe;
    border-radius: 5px;
    border: 1px solid var(--borderColor_aroundWhiteOrLightestGrey);
    width: 270px;
    padding: 20px;
    font-size: x-large;
    font-weight: bold;
    min-height: 100px;
    box-shadow: 0 2px 4px var(--shadowColor_default);
}

.headerContainer .measureSelectorContainer .selectorPointyTop {
    background-color: #fffe;
    border: 1px solid var(--borderColor_aroundWhiteOrLightestGrey);
    border-right-color: white;
    border-bottom-color: white;
    width: 15px;
    height: 15px;
    position: absolute;
    top: -8px;
    left: 50px;
    transform: rotateZ(45deg);
}

.childrenContainer {
    grid-area: childrenArea;
    margin: 10px 20px 0 20px;
}

/* expanded BOOL PROP */

.expanded {
    height: auto;
    padding-bottom: 20px;
}

/* headerIsSticky BOOL PROP */

.headerIsSticky .headerContainer {
    position: sticky;
    top: 0;
    z-index: 1;
}

/* headerIsHighlighted BOOL PROP */

.headerContainerVisible .headerContainer {
    box-shadow: 0 2px 4px var(--shadowColor_default);
    background-color: #fffe;
    /* border: 1px solid var(--borderColor_aroundWhiteOrLightestGrey); */
    /* border-top: none; */
    animation: flash 200ms;
}

@keyframes flash {
    from {
        box-shadow: 0 0 0 white;
        /* border: 1px solid white; */
        /* border-top: none; */
        background-color: transparent;
    }

    to {
        box-shadow: 0 2px 4px var(--shadowColor_default);
        /* border: 1px solid var(--borderColor_aroundWhiteOrLightestGrey); */
        /* border-top: none; */
        background-color: #fffe;
    }
}

/* measureSelectorVisible BOOL PROP */

.measureSelectorVisible .headerContainer .measureSelectorContainer {
    visibility: visible;
}
